// <auto-generated />
using System;
using DaOAuthV2.Dal.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DaOAuthV2.Gui.Api.Migrations
{
    [DbContext(typeof(DaOAuthContext))]
    [Migration("20190101153614_link_scope_ressource_server")]
    partial class link_scope_ressource_server
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("auth")
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DaOAuthV2.Domain.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientSecret")
                        .HasColumnName("ClientSecret")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("ClientTypeId")
                        .HasColumnName("FK_ClientType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnName("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValid")
                        .HasColumnName("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnName("PublicId")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("ClientTypeId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("DaOAuthV2.Domain.ClientReturnUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnName("FK_Client")
                        .HasColumnType("int");

                    b.Property<string>("ReturnUrl")
                        .IsRequired()
                        .HasColumnName("ReturnUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientReturnUrl");
                });

            modelBuilder.Entity("DaOAuthV2.Domain.ClientScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnName("FK_Client")
                        .HasColumnType("int");

                    b.Property<int>("ScopeId")
                        .HasColumnName("FK_Scope")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ScopeId");

                    b.ToTable("ClientScope");
                });

            modelBuilder.Entity("DaOAuthV2.Domain.ClientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Wording")
                        .IsRequired()
                        .HasColumnName("Wording")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("ClientType");

                    b.HasData(
                        new { Id = 1, Wording = "public" },
                        new { Id = 2, Wording = "confidential" }
                    );
                });

            modelBuilder.Entity("DaOAuthV2.Domain.Code", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeValue")
                        .IsRequired()
                        .HasColumnName("CodeValue")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<long>("ExpirationTimeStamp")
                        .HasColumnName("ExpirationTimeStamp")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsValid")
                        .HasColumnName("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Scope")
                        .HasColumnName("Scope")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(2147483647);

                    b.Property<int>("UserClientId")
                        .HasColumnName("FK_UserClient")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserClientId");

                    b.ToTable("Code");
                });

            modelBuilder.Entity("DaOAuthV2.Domain.RessourceServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValid")
                        .HasColumnName("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("Login")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<byte[]>("ServerSecret")
                        .HasColumnName("ServerSecret")
                        .HasColumnType("varbinary(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("RessourceServer");
                });

            modelBuilder.Entity("DaOAuthV2.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Wording")
                        .IsRequired()
                        .HasColumnName("Wording")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new { Id = 1, Wording = "User" },
                        new { Id = 2, Wording = "Administrator" }
                    );
                });

            modelBuilder.Entity("DaOAuthV2.Domain.Scope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NiceWording")
                        .HasColumnName("NiceWording")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<int>("RessourceServerId")
                        .HasColumnName("FK_RessourceServer")
                        .HasColumnType("int");

                    b.Property<string>("Wording")
                        .HasColumnName("Wording")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RessourceServerId");

                    b.ToTable("Scope");
                });

            modelBuilder.Entity("DaOAuthV2.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnName("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnName("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("FullName")
                        .HasColumnName("FullName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsValid")
                        .HasColumnName("IsValid")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Password")
                        .HasColumnName("Password")
                        .HasColumnType("varbinary(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DaOAuthV2.Domain.UserClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnName("FK_Client")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnName("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActif")
                        .HasColumnName("IsActif")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCreator")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsCreator")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("RefreshToken")
                        .HasColumnName("RefreshToken")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(2147483647);

                    b.Property<int>("UserId")
                        .HasColumnName("FK_User")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClient");
                });

            modelBuilder.Entity("DaOAuthV2.Domain.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnName("FK_Role")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("FK_User")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("DaOAuthV2.Domain.Client", b =>
                {
                    b.HasOne("DaOAuthV2.Domain.ClientType", "ClientType")
                        .WithMany("Clients")
                        .HasForeignKey("ClientTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DaOAuthV2.Domain.ClientReturnUrl", b =>
                {
                    b.HasOne("DaOAuthV2.Domain.Client", "Client")
                        .WithMany("ClientReturnUrls")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DaOAuthV2.Domain.ClientScope", b =>
                {
                    b.HasOne("DaOAuthV2.Domain.Client", "Client")
                        .WithMany("ClientsScopes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DaOAuthV2.Domain.Scope", "Scope")
                        .WithMany("ClientsScopes")
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DaOAuthV2.Domain.Code", b =>
                {
                    b.HasOne("DaOAuthV2.Domain.UserClient", "UserClient")
                        .WithMany("Codes")
                        .HasForeignKey("UserClientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DaOAuthV2.Domain.Scope", b =>
                {
                    b.HasOne("DaOAuthV2.Domain.RessourceServer", "RessourceServer")
                        .WithMany("Scopes")
                        .HasForeignKey("RessourceServerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DaOAuthV2.Domain.UserClient", b =>
                {
                    b.HasOne("DaOAuthV2.Domain.Client", "Client")
                        .WithMany("UsersClients")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DaOAuthV2.Domain.User", "User")
                        .WithMany("UsersClients")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DaOAuthV2.Domain.UserRole", b =>
                {
                    b.HasOne("DaOAuthV2.Domain.Role", "Role")
                        .WithMany("UsersRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DaOAuthV2.Domain.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
