<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DaOAuthV2.OAuth.Api</name>
    </assembly>
    <members>
        <member name="T:DaOAuthV2.OAuth.Api.Controllers.OAuthController">
            <summary>
            OAuth controller
            </summary>
        </member>
        <member name="M:DaOAuthV2.OAuth.Api.Controllers.OAuthController.#ctor(DaOAuthV2.Service.Interface.IOAuthService)">
            <summary>
            Constructor
            </summary>
            <param name="authorizeService">Injected Authorize service</param>
        </member>
        <member name="M:DaOAuthV2.OAuth.Api.Controllers.OAuthController.Authorize(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            The authorize endpoint
            </summary>
            <param name="responseType">response type, mandatory</param>
            <param name="clientId">id of the client calling the endpoint, mandatory</param>
            <param name="state">a state parameter, will be returned by server</param>
            <param name="redirectUri">url on wich redirect the response, mandatory</param>
            <param name="scope">scopes askings by the client</param>
            <returns>Redirect to redirect url, with an authorization code</returns>
        </member>
        <member name="M:DaOAuthV2.OAuth.Api.Controllers.OAuthController.Token(DaOAuthV2.OAuth.Api.Models.TokenModel,System.String)">
            <summary>
            The token endpoint
            </summary>
            <param name="model">infos</param>
            <param name="authorization">header : contains client credentials</param>
            <returns>a JWT token</returns>
        </member>
        <member name="M:DaOAuthV2.OAuth.Api.Controllers.OAuthController.Introspect(DaOAuthV2.OAuth.Api.Models.IntrospectTokenModel,System.String)">
            <summary>
            the introspect endpoint
            </summary>
            <param name="model">infos, contains token to introspect</param>
            <param name="authorization">ressource server credentials</param>
            <returns>a json with a boolean, true if token is valid, else false</returns>
        </member>
        <member name="T:DaOAuthV2.OAuth.Api.Filters.DaOAuthExceptionFilter">
            <summary>
            Custom exception filter
            Used to filter custom exception and return appropriate http response
            </summary>
        </member>
        <member name="M:DaOAuthV2.OAuth.Api.Filters.DaOAuthExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Check the exception type, to specify the correct http code to the context
            </summary>
            <param name="context">http context in wich exception occur</param>
        </member>
        <member name="T:DaOAuthV2.OAuth.Api.Models.Binders.TokenModelBinder">
            <summary>
            Binder of token endpoint
            </summary>
        </member>
        <member name="M:DaOAuthV2.OAuth.Api.Models.Binders.TokenModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Use to bind json type parameters to csharp type parameters
            </summary>
            <param name="bindingContext">context</param>
            <returns>A Csharp Style Model</returns>
        </member>
        <member name="T:DaOAuthV2.OAuth.Api.Models.IntrospectTokenModel">
            <summary>
            Model to use to introspect a token
            </summary>
        </member>
        <member name="P:DaOAuthV2.OAuth.Api.Models.IntrospectTokenModel.Token">
            <summary>
            Token value
            </summary>
        </member>
        <member name="T:DaOAuthV2.OAuth.Api.Models.TokenModel">
            <summary>
            Model to use to get a token
            </summary>
        </member>
        <member name="P:DaOAuthV2.OAuth.Api.Models.TokenModel.GrantType">
            <summary>
            Grant type
            </summary>
        </member>
        <member name="P:DaOAuthV2.OAuth.Api.Models.TokenModel.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:DaOAuthV2.OAuth.Api.Models.TokenModel.RedirectUrl">
            <summary>
            Redirect url
            </summary>
        </member>
        <member name="P:DaOAuthV2.OAuth.Api.Models.TokenModel.ClientId">
            <summary>
            Client Id
            </summary>
        </member>
        <member name="P:DaOAuthV2.OAuth.Api.Models.TokenModel.RefreshToken">
            <summary>
            Refresh token
            </summary>
        </member>
        <member name="P:DaOAuthV2.OAuth.Api.Models.TokenModel.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:DaOAuthV2.OAuth.Api.Models.TokenModel.Username">
            <summary>
            Username
            </summary>
        </member>
        <member name="P:DaOAuthV2.OAuth.Api.Models.TokenModel.Scope">
            <summary>
            Scope
            </summary>
        </member>
    </members>
</doc>
